[platformio]
default_envs = teensy40
src_dir = src
include_dir = include
lib_dir = lib

[common]
teensy_libs =
  paulstoffregen/OctoWS2811@1.5
  paulstoffregen/Encoder@1.4.2
  fortyseveneffects/MIDI Library@5.0.2
  bblanchon/ArduinoJson@7.4.2
  adafruit/Adafruit SH110X@2.1.14
  adafruit/Adafruit GFX Library@1.12.3
  adafruit/Adafruit BusIO@1.17.4

[env:native]
platform = native@1.2.1
build_unflags = -std=gnu++11
build_flags =
  -std=gnu++17
  -D SEEDBOX_VERSION=\"${PIO_SRC_REV}\"
  -D ARDUINOJSON_USE_DOUBLE=1
  -D QUIET_MODE=0
  -Wall -Wextra
  -D SEEDBOX_SIM=1
lib_deps =
  bblanchon/ArduinoJson@7.4.2
extra_scripts =
  pre:scripts/gen_version.py
test_build_src = yes
build_src_filter =
  +<*>
  -<io/UI*>
  -<io/Leds*>

[env:teensy40]
platform = teensy
framework = arduino
board = teensy40
board_build.usbtype = USB_MIDI_SERIAL
monitor_speed = 115200
upload_protocol = teensy-cli
build_flags =
  ${env.build_flags}
  -D SEEDBOX_HW=1
  -D USB_MIDI
lib_deps = ${common.teensy_libs}
check_skip_packages = yes
; cppcheck likes to wander into .pio caches unless we fence it in.  This keeps
; the analyzer focused on our actual firmware sources and headers instead of
; vendored dependencies that we don't control.  The old `check_patterns`
; setting is gone, so we lean on `check_src_filter` with explicit
; allow/deny-style globs.
check_src_filters =
  +<src/**>
  +<include/**>
  -<.pio/**>
  -<lib/**>
  -<tests/**>
  -<test/**>

[env:teensy40_usbmidiserial]
; Legacy alias so older docs/scripts keep working. Prefer `teensy40`.
platform = teensy
framework = arduino
board = teensy40
board_build.usbtype = USB_MIDI_SERIAL
monitor_speed = 115200
upload_protocol = teensy-cli
build_unflags = -std=gnu++11
build_flags =
  -std=gnu++17
  -D SEEDBOX_VERSION=\"${PIO_SRC_REV}\"
  -D ARDUINOJSON_USE_DOUBLE=1
  -Wall -Wextra
  -D SEEDBOX_HW=1
  -D USB_MIDI
extra_scripts =
  pre:scripts/gen_version.py
lib_deps = ${common.teensy_libs}
check_skip_packages = yes
check_src_filters = ${env:teensy40.check_src_filters}
